from collections import Counter

def min_swap_cost(arrA, arrB):
    if sum(arrA) != sum(arrB):
        return -1
    freqA = Counter(arrA)
    freqB = Counter(arrB)
    a = []
    b = []

    for height in set(arrA + arrB):
        countA = freqA.get(height, 0)
        countB = freqB.get(height, 0)
        
        if (countA + countB) % 2 != 0:  
            return -1

       
        if countA > countB:
            a.extend([height] * ((countA - countB) // 2))
        elif countB > countA:
            b.extend([height] * ((countB - countA) // 2))

   
    a.sort()
    b.sort(reverse=True)  
    
    cost = 0
    for i, j in zip(a, b):
        cost += min(i, j)
    
    return cost

# Example usage
arrA = [4, 2, 2, 2]
arrB = [1, 4, 1, 2]
print(min_swap_cost(arrA, arrB))  # Output should be 1